{
  "type": "page",
  "id": "u:86c6d41304a3",
  "asideResizor": false,
  "pullRefresh": {
    "disabled": true
  },
  "regions": ["body"],
  "body": [
    {
      "type": "container",
      "body": [
        {
          "type": "select",
          "label": "服务器IP",
          "name": "select",
          "id": "u:59c468d5bc8a",
          "multiple": false,
          "mode": "horizontal",
          "labelAlign": "left",
          "source": {
            "method": "post",
            "url": "/dc/cpt/graphql/v1/distinct/monitor_system_info/ip",
            "requestAdaptor": " const hasuraQuery = {\r\n        isPageQuery: false,\r\n        columnList: []\r\n    };\r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"name\",\r\n        \"ip\"\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;\r\n",
            "adaptor": "",
            "messages": {}
          },
          "labelField": "ip",
          "valueField": "ip",
          "selectFirst": true
        }
      ],
      "style": {
        "position": "relative",
        "display": "flex",
        "inset": "auto",
        "flexWrap": "nowrap",
        "flexDirection": "column",
        "alignItems": "flex-start"
      },
      "size": "none",
      "wrapperBody": false,
      "id": "u:d01b7e4c0b21",
      "isFixedHeight": false,
      "isFixedWidth": false
    },
    {
      "type": "page",
      "id": "u:cb4c37489e4f",
      "asideResizor": false,
      "pullRefresh": {
        "disabled": true
      },
      "regions": ["body"],
      "body": [
        {
          "type": "flex",
          "items": [
            {
              "type": "container",
              "body": [
                {
                  "type": "flex",
                  "items": [
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "service",
                          "body": [
                            {
                              "type": "static",
                              "label": "",
                              "id": "u:64191ec5e0db",
                              "quickEdit": false,
                              "popOver": false,
                              "copyable": false,
                              "name": "total_memory",
                              "tpl": "",
                              "inline": true
                            }
                          ],
                          "id": "u:449da048241d",
                          "dsType": "api",
                          "api": {
                            "url": "/dc/cpt/graphql/v1/detail/monitor_system_info",
                            "method": "post",
                            "requestAdaptor": "console.log(context)\n const hasuraQuery = {\n        searchConditionList: [],\n        sortList:[],\n        columnList: []\n    };\n\n \n hasuraQuery.sortList.push({\n                fieldName: \"timestamp\",\n                sortExp: \"desc\"\n            });\n\n    // 处理返回字段\n    const columns = [\n        \"total_memory\"\n\n    ];\n    hasuraQuery.columnList = columns;\n\n    // 假设前端没有传递排序条件，这里暂不处理\n\n    api.data = hasuraQuery;\n    return api;",
                            "adaptor": "function convertBytesToGigabytes(bytes) {\r\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\r\n    const gigabytes = bytes / (1024 * 1024 * 1024);\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2));\r\n}\r\n\r\nreturn{\r\n    data:{\r\n      \"total_memory\":convertBytesToGigabytes(response.data.total_memory) + `GiB`\r\n  }\r\n}",
                            "messages": {}
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:4a3efe404f01",
                      "wrapperCustomStyle": {
                        ".cxd-Form-static": {
                          "font-size": "24px",
                          "color": "#f2c820",
                          "font-weight": "bold"
                        }
                      }
                    },
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "tpl",
                          "tpl": "总内存",
                          "inline": true,
                          "wrapperComponent": "",
                          "id": "u:4f947785b878",
                          "themeCss": {
                            "baseControlClassName": {
                              "font:default": {
                                "fontWeight": "500",
                                "fontSize": "14px"
                              }
                            }
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:516b06852b9f"
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "rowGap": "10px",
                    "columnGap": "10px",
                    "flexDirection": "column",
                    "flexWrap": "nowrap",
                    "inset": "auto",
                    "alignItems": "center"
                  },
                  "id": "u:30a1badc8a73",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:f9dd851a734e",
              "wrapperCustomStyle": {
                ".cxd-Flex": {
                  "background": "#e9edee5c",
                  "box-sizing": "border-box",
                  "padding": "10px",
                  "border-radius": "10px"
                }
              }
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "flex",
                  "items": [
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "service",
                          "body": [
                            {
                              "type": "static",
                              "label": "",
                              "id": "u:4f55bd9b2f44",
                              "quickEdit": false,
                              "popOver": false,
                              "copyable": false,
                              "name": "available_memory",
                              "tpl": "",
                              "inline": true,
                              "placeholder": "-"
                            }
                          ],
                          "id": "u:b0c75d4e61ff",
                          "dsType": "api",
                          "api": {
                            "url": "/dc/cpt/graphql/v1/detail/monitor_system_info",
                            "method": "post",
                            "requestAdaptor": "console.log(context)\n const hasuraQuery = {\n        searchConditionList: [],\n        sortList:[],\n        columnList: []\n    };\n\n \n hasuraQuery.sortList.push({\n                fieldName: \"timestamp\",\n                sortExp: \"desc\"\n            });\n\n    // 处理返回字段\n    const columns = [\n        \"available_memory\"\n\n    ];\n    hasuraQuery.columnList = columns;\n\n    // 假设前端没有传递排序条件，这里暂不处理\n\n    api.data = hasuraQuery;\n    return api;",
                            "adaptor": "function convertBytesToGigabytes(bytes) {\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\n    const gigabytes = bytes / (1024 * 1024 * 1024);\n    // 保留两位小数\n    return parseFloat(gigabytes.toFixed(2));\n}\n\nreturn{\n    data:{\n      \"available_memory\":convertBytesToGigabytes(response.data.available_memory) + `GiB`\n  }\n}",
                            "messages": {}
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:9e45af1d263a",
                      "wrapperCustomStyle": {
                        ".cxd-Form-static": {
                          "font-size": "24px",
                          "color": "#206bf2",
                          "font-weight": "bold"
                        }
                      }
                    },
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "tpl",
                          "tpl": "剩余可使用内存",
                          "inline": true,
                          "wrapperComponent": "",
                          "id": "u:7e92d15cc8bd",
                          "themeCss": {
                            "baseControlClassName": {
                              "font:default": {
                                "fontWeight": "500",
                                "fontSize": "14px"
                              }
                            }
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:f9ce5c79b06a"
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "rowGap": "10px",
                    "columnGap": "10px",
                    "flexDirection": "column",
                    "flexWrap": "nowrap",
                    "inset": "auto",
                    "alignItems": "center"
                  },
                  "id": "u:11ec52b1fbb5",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:88782bb8195e",
              "wrapperCustomStyle": {
                ".cxd-Flex": {
                  "background": "#e9edee5c",
                  "box-sizing": "border-box",
                  "padding": "10px",
                  "border-radius": "10px"
                }
              }
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "flex",
                  "items": [
                    {
                      "type": "container",
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:c3a59c9da126",
                      "wrapperCustomStyle": {
                        ".cxd-Form-static": {
                          "font-size": "24px",
                          "color": "#16a5e2",
                          "font-weight": "bold"
                        }
                      },
                      "body": [
                        {
                          "type": "service",
                          "body": [
                            {
                              "type": "static",
                              "label": "",
                              "id": "u:4b96c218da85",
                              "quickEdit": false,
                              "popOver": false,
                              "copyable": false,
                              "name": "memory_usage",
                              "tpl": "",
                              "inline": true
                            }
                          ],
                          "id": "u:22f180340cb4",
                          "dsType": "api",
                          "api": {
                            "url": "/dc/cpt/graphql/v1/detail/monitor_system_info",
                            "method": "post",
                            "requestAdaptor": "console.log(context)\n const hasuraQuery = {\n        searchConditionList: [],\n        sortList:[],\n        columnList: []\n    };\n\n \n hasuraQuery.sortList.push({\n                fieldName: \"timestamp\",\n                sortExp: \"desc\"\n            });\n\n    // 处理返回字段\n    const columns = [\n        \"memory_usage\"\n\n    ];\n    hasuraQuery.columnList = columns;\n\n    // 假设前端没有传递排序条件，这里暂不处理\n\n    api.data = hasuraQuery;\n    return api;",
                            "adaptor": "function convertBytesToGigabytes(bytes) {\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\n    const gigabytes = bytes / (1024 * 1024 * 1024);\n    // 保留两位小数\n    return parseFloat(gigabytes.toFixed(2));\n}\n\nfunction convertPrecent(bytes) {\n    const gigabytes = bytes* 100;\n    // 保留两位小数\n    return parseFloat(gigabytes.toFixed(2)) + `%`;\n}\n\nreturn{\n    data:{\n      \"memory_usage\":convertPrecent(response.data.memory_usage)\n  }\n}",
                            "messages": {}
                          }
                        }
                      ]
                    },
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "tpl",
                          "tpl": "内存使用率",
                          "inline": true,
                          "wrapperComponent": "",
                          "id": "u:f1afb6810a4a",
                          "themeCss": {
                            "baseControlClassName": {
                              "font:default": {
                                "fontWeight": "500",
                                "fontSize": "14px"
                              }
                            }
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:ef4dc4297ed3"
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "rowGap": "10px",
                    "columnGap": "10px",
                    "flexDirection": "column",
                    "flexWrap": "nowrap",
                    "inset": "auto",
                    "alignItems": "center"
                  },
                  "id": "u:24c51b6e27ee",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:4421cbc46059",
              "wrapperCustomStyle": {
                ".cxd-Flex": {
                  "background": "#e9edee5c",
                  "box-sizing": "border-box",
                  "padding": "10px",
                  "border-radius": "10px"
                }
              }
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "flex",
                  "items": [
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "service",
                          "body": [
                            {
                              "type": "static",
                              "label": "",
                              "id": "u:15c444b923e2",
                              "quickEdit": false,
                              "popOver": false,
                              "copyable": false,
                              "name": "logical_processor_count",
                              "tpl": ""
                            }
                          ],
                          "id": "u:3aae2f552c64",
                          "dsType": "api",
                          "api": {
                            "url": "/dc/cpt/graphql/v1/detail/monitor_system_info",
                            "method": "post",
                            "requestAdaptor": "console.log(context)\n const hasuraQuery = {\n        searchConditionList: [],\n        sortList:[],\n        columnList: []\n    };\n\n \n hasuraQuery.sortList.push({\n                fieldName: \"timestamp\",\n                sortExp: \"desc\"\n            });\n\n    // 处理返回字段\n    const columns = [\n        \"logical_processor_count\"\n\n    ];\n    hasuraQuery.columnList = columns;\n\n    // 假设前端没有传递排序条件，这里暂不处理\n\n    api.data = hasuraQuery;\n    return api;",
                            "adaptor": "",
                            "messages": {}
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:19cf4a545fe5",
                      "wrapperCustomStyle": {
                        ".cxd-Form-static": {
                          "font-size": "24px",
                          "color": "#e24c16",
                          "font-weight": "bold"
                        }
                      }
                    },
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "tpl",
                          "tpl": "CPU核数",
                          "inline": true,
                          "wrapperComponent": "",
                          "id": "u:735cb7f3b7a2",
                          "themeCss": {
                            "baseControlClassName": {
                              "font:default": {
                                "fontWeight": "500",
                                "fontSize": "14px"
                              }
                            }
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:720bd467622b"
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "rowGap": "10px",
                    "columnGap": "10px",
                    "flexDirection": "column",
                    "flexWrap": "nowrap",
                    "inset": "auto",
                    "alignItems": "center"
                  },
                  "id": "u:efc8b7f33dce",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px",
                "flexWrap": "nowrap"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:16abd4c7e577",
              "wrapperCustomStyle": {
                ".cxd-Flex": {
                  "background": "#e9edee5c",
                  "box-sizing": "border-box",
                  "padding": "10px",
                  "border-radius": "10px"
                }
              }
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "flex",
                  "items": [
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "service",
                          "body": [
                            {
                              "type": "static",
                              "label": "",
                              "id": "u:7f9a671a9ab3",
                              "quickEdit": false,
                              "popOver": false,
                              "copyable": false,
                              "name": "cpu_load",
                              "tpl": ""
                            }
                          ],
                          "id": "u:8bb66b05d5a9",
                          "dsType": "api",
                          "api": {
                            "url": "/dc/cpt/graphql/v1/detail/monitor_system_info",
                            "method": "post",
                            "requestAdaptor": "console.log(context)\n const hasuraQuery = {\n        searchConditionList: [],\n        sortList:[],\n        columnList: []\n    };\n\n \n hasuraQuery.sortList.push({\n                fieldName: \"timestamp\",\n                sortExp: \"desc\"\n            });\n\n    // 处理返回字段\n    const columns = [\n        \"cpu_load\"\n\n    ];\n    hasuraQuery.columnList = columns;\n\n    // 假设前端没有传递排序条件，这里暂不处理\n\n    api.data = hasuraQuery;\n    return api;",
                            "adaptor": "function convertBytesToGigabytes(bytes) {\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\n    const gigabytes = bytes / (1024 * 1024 * 1024);\n    // 保留两位小数\n    return parseFloat(gigabytes.toFixed(2));\n}\n\nfunction convertPrecent(bytes) {\n    const gigabytes = bytes* 100;\n    // 保留两位小数\n    return parseFloat(gigabytes.toFixed(2)) + `%`;\n}\n\nreturn{\n    data:{\n      \"cpu_load\":convertPrecent(response.data.cpu_load)\n  }\n}",
                            "messages": {}
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:8d9a83483d4a",
                      "wrapperCustomStyle": {
                        ".cxd-Form-static": {
                          "font-size": "24px",
                          "color": "#ac41d7",
                          "font-weight": "bold"
                        }
                      }
                    },
                    {
                      "type": "container",
                      "body": [
                        {
                          "type": "tpl",
                          "tpl": "CPU总使用率",
                          "inline": true,
                          "wrapperComponent": "",
                          "id": "u:dfcf2d77856d",
                          "themeCss": {
                            "baseControlClassName": {
                              "font:default": {
                                "fontWeight": "500",
                                "fontSize": "14px"
                              }
                            }
                          }
                        }
                      ],
                      "size": "none",
                      "style": {
                        "position": "static",
                        "display": "block",
                        "flex": "1 1 auto",
                        "flexGrow": 1
                      },
                      "wrapperBody": false,
                      "isFixedHeight": false,
                      "isFixedWidth": false,
                      "id": "u:fc5efa7e86ce"
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "rowGap": "10px",
                    "columnGap": "10px",
                    "flexDirection": "column",
                    "flexWrap": "nowrap",
                    "inset": "auto",
                    "alignItems": "center"
                  },
                  "id": "u:7fb1681e8d5c",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:904d5816fbac",
              "wrapperCustomStyle": {
                ".cxd-Flex": {
                  "background": "#e9edee5c",
                  "box-sizing": "border-box",
                  "padding": "10px",
                  "border-radius": "10px"
                }
              }
            }
          ],
          "style": {
            "position": "relative",
            "rowGap": "10px",
            "columnGap": "10px",
            "flexWrap": "nowrap",
            "inset": "auto"
          },
          "id": "u:5915ad0c698e",
          "isFixedHeight": false,
          "isFixedWidth": false
        },
        {
          "type": "flex",
          "items": [
            {
              "type": "container",
              "body": [
                {
                  "type": "chart",
                  "config": {
                    "series": [
                      {
                        "data": [820, 932, 901, 934, 1290, 1330, 1320],
                        "type": "line"
                      }
                    ],
                    "xAxis": {
                      "type": "category",
                      "data": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
                    },
                    "yAxis": {
                      "type": "value"
                    },
                    "backgroundColor": "transparent",
                    "tooltip": {
                      "trigger": "axis"
                    },
                    "title": {
                      "text": "CPU使用率(%)"
                    }
                  },
                  "replaceChartOption": true,
                  "id": "u:4b1cfb709944",
                  "dataFilter": "function convertBytesToGigabytes(bytes) {\r\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\r\n    const gigabytes = bytes / (1024 * 1024 * 1024);\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2));\r\n}\r\n\r\nfunction convertPrecent(bytes) {\r\n    const gigabytes = bytes* 100;\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2));\r\n}\r\nlet yData =  data.rows.map(row => convertPrecent(row.cpu_load) ).reverse()\r\nlet xData =  data.rows.map(row => row.timestamp ).reverse()\r\n\r\nconfig.series[0].data = yData\r\nconfig.xAxis.data = xData\r\n",
                  "api": {
                    "url": "/dc/cpt/graphql/v1/pageList/monitor_system_info",
                    "method": "post",
                    "requestAdaptor": "console.log(context)\r\n const hasuraQuery = {\r\n        searchConditionList: [],\r\n        sortList:[],\r\n        columnList: []\r\n    };\r\n\r\n \r\n\r\n hasuraQuery.sortList.push({\r\n                fieldName: \"timestamp\",\r\n                sortExp: \"desc\"\r\n            });\r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"cpu_load\",\r\n        \"timestamp\"\r\n\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;",
                    "adaptor": "function convertTimestampToDateTime(timestamp) {\r\n  if (!timestamp) return \"-\";\r\n  const date = new Date(timestamp);\r\n  \r\n  // 年月日部分（使用本地时间）\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份从0开始，需+1\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  \r\n  // 时分秒部分（使用本地时间）\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  \r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nconst msType={\r\n  \"1\":\"锁定\",\r\n  \"0\":\"未锁定\"\r\n}\r\nreturn {\r\n  status:0,\r\n  success:true,\r\n  data:{\r\n    count: response.data.count,\r\n    rows:response.data.rows.map(item=>{\r\n       if (item.label_names && item.label_names.length > 0) {\r\n                item.label_names = item.label_names.map(subItem => subItem.names).join('\\n');\r\n            } else {\r\n                item.label_names = '-';\r\n            }\r\n       if (item.samples) {\r\n        let sList = JSON.parse(item.samples)\r\n            item.samples = sList.join('\\n');\r\n        } else {\r\n          item.samples = '-';\r\n        }\r\n\r\n        if(item.task_names){\r\n          let taskNames = item.task_names?.map(mItem=>{\r\n            return mItem?.names?.map(cItem=>cItem)\r\n          }).filter(item=>item)\r\n          item.task_names = taskNames.join()\r\n        }\r\n      \r\n      return {\r\n        ...item,\r\n        \"created_at\":convertTimestampToDateTime(item.created_at),\r\n        \"timestamp\":convertTimestampToDateTime(item.timestamp),\r\n        \"manual\":msType[item.manual]||'-'\r\n      }\r\n    })\r\n  }\r\n}\r\n",
                    "messages": {}
                  },
                  "interval": "15000ms",
                  "name": ""
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": 0
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:32a1ffc6df13"
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "chart",
                  "config": {
                    "tooltip": {
                      "trigger": "axis"
                    },
                    "legend": {
                      "data": ["总内存", "可用"]
                    },
                    "xAxis": {
                      "type": "category",
                      "boundaryGap": false,
                      "data": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
                    },
                    "yAxis": {
                      "type": "value"
                    },
                    "series": [
                      {
                        "type": "line",
                        "data": [120, 132, 101, 134, 90, 230, 210],
                        "name": "可用",
                        "stack": "Total"
                      },
                      {
                        "name": "总内存",
                        "type": "line",
                        "stack": "Total",
                        "data": [220, 182, 191, 234, 290, 330, 310]
                      }
                    ],
                    "title": {
                      "text": "内存信息(GiB)"
                    }
                  },
                  "replaceChartOption": true,
                  "id": "u:3dc12bfe381d",
                  "dataFilter": "function convertBytesToGigabytes(bytes) {\r\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\r\n    const gigabytes = bytes / (1024 * 1024 * 1024);\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2));\r\n}\r\n\r\nfunction convertPrecent(bytes) {\r\n    const gigabytes = bytes* 100;\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2));\r\n}\r\nlet zData =  data.rows.map(row => convertBytesToGigabytes(row.total_memory) ).reverse()\r\nlet aData =  data.rows.map(row => convertBytesToGigabytes(row.available_memory) ).reverse()\r\nlet xData =  data.rows.map(row => row.timestamp ).reverse()\r\n\r\nconfig.series[0].data = aData\r\nconfig.series[1].data = zData\r\nconfig.xAxis.data = xData\r\n",
                  "api": {
                    "url": "/dc/cpt/graphql/v1/pageList/monitor_system_info",
                    "method": "post",
                    "requestAdaptor": " const hasuraQuery = {\r\n        searchConditionList: [],\r\n        sortList:[],\r\n        columnList: []\r\n    };\r\n\r\n \r\n\r\n hasuraQuery.sortList.push({\r\n                fieldName: \"timestamp\",\r\n                sortExp: \"desc\"\r\n            });\r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"total_memory\",\r\n        \"available_memory\",\r\n        \"timestamp\"\r\n\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;\r\n",
                    "adaptor": "function convertTimestampToDateTime(timestamp) {\r\n  if (!timestamp) return \"-\";\r\n  const date = new Date(timestamp);\r\n  \r\n  // 年月日部分（使用本地时间）\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份从0开始，需+1\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  \r\n  // 时分秒部分（使用本地时间）\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  \r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nconst msType={\r\n  \"1\":\"锁定\",\r\n  \"0\":\"未锁定\"\r\n}\r\nreturn {\r\n  status:0,\r\n  success:true,\r\n  data:{\r\n    count: response.data.count,\r\n    rows:response.data.rows.map(item=>{\r\n       if (item.label_names && item.label_names.length > 0) {\r\n                item.label_names = item.label_names.map(subItem => subItem.names).join('\\n');\r\n            } else {\r\n                item.label_names = '-';\r\n            }\r\n       if (item.samples) {\r\n        let sList = JSON.parse(item.samples)\r\n            item.samples = sList.join('\\n');\r\n        } else {\r\n          item.samples = '-';\r\n        }\r\n\r\n        if(item.task_names){\r\n          let taskNames = item.task_names?.map(mItem=>{\r\n            return mItem?.names?.map(cItem=>cItem)\r\n          }).filter(item=>item)\r\n          item.task_names = taskNames.join()\r\n        }\r\n      \r\n      return {\r\n        ...item,\r\n        \"created_at\":convertTimestampToDateTime(item.created_at),\r\n        \"timestamp\":convertTimestampToDateTime(item.timestamp),\r\n        \"manual\":msType[item.manual]||'-'\r\n      }\r\n    })\r\n  }\r\n}\r\n",
                    "messages": {}
                  }
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": 0
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:667a1574e311"
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "chart",
                  "config": {
                    "xAxis": {
                      "type": "category",
                      "data": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                      "boundaryGap": false,
                      "axisTick": {
                        "alignWithLabel": true
                      }
                    },
                    "yAxis": {
                      "type": "value"
                    },
                    "series": [
                      {
                        "data": [820, 932, 901, 934, 1290, 1330, 1320],
                        "type": "line"
                      }
                    ],
                    "backgroundColor": "transparent",
                    "title": {
                      "text": "磁盘使用率(%)"
                    },
                    "tooltip": {
                      "trigger": "axis"
                    },
                    "grid": {
                      "right": "1%"
                    }
                  },
                  "replaceChartOption": true,
                  "id": "u:c9f69d9d602e",
                  "dataFilter": "// 提取 X 轴数据\n    const xAxisData = data.rows.map(row => row.timestamp.replace(/T/g,' '));\n\n    // 提取不同 mount_point 的数据作为 Y 轴数据\n    const mountPoints = [];\n    const seriesData = [];\n\n    data.rows.forEach(row => {\n      row.values.forEach(value => {\n        if (!mountPoints.includes(value.mount_point)) {\n          mountPoints.push(value.mount_point);\n          seriesData.push({\n            name: value.mount_point,\n            type: 'line',\n            data: []\n          });\n        }\n        const seriesIndex = mountPoints.indexOf(value.mount_point);\n        seriesData[seriesIndex].data.push(parseFloat((value.space_usage*100).toFixed(2)));\n      });\n    });\n\nconfig.xAxis.data = xAxisData\nconfig.series = seriesData",
                  "api": {
                    "url": "/dc/cpt/graphql/v1/pageList/monitor_disk_partition_recent",
                    "method": "post",
                    "requestAdaptor": "console.log(context)\r\n const hasuraQuery = {\r\n        isPageQuery: false,\r\n        searchConditionList: [],\r\n        page: api.data.page || 1,\r\n        sortList:[],\r\n        limit: api.data.perPage || 10,\r\n        columnList: []\r\n    };\r\n\r\n \r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"timestamp\",\r\n        \"values\"\r\n\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;",
                    "adaptor": "",
                    "messages": {}
                  },
                  "interval": "15000ms"
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": 0
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:6c2b327bbec4"
            }
          ],
          "style": {
            "position": "relative",
            "rowGap": "10px",
            "columnGap": "10px",
            "flexWrap": "nowrap",
            "inset": "auto"
          },
          "id": "u:643d9c43420f",
          "isFixedHeight": false,
          "isFixedWidth": false,
          "themeCss": {
            "baseControlClassName": {
              "padding-and-margin:default": {
                "marginTop": "20px"
              }
            }
          }
        },
        {
          "type": "flex",
          "items": [
            {
              "type": "container",
              "body": [
                {
                  "type": "container",
                  "body": [
                    {
                      "type": "tpl",
                      "tpl": "磁盘分区信息",
                      "inline": true,
                      "wrapperComponent": "",
                      "id": "u:172300911922",
                      "themeCss": {
                        "baseControlClassName": {
                          "font:default": {
                            "fontSize": "18px",
                            "fontWeight": "600"
                          }
                        }
                      }
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "display": "flex",
                    "inset": "auto",
                    "flexWrap": "nowrap",
                    "flexDirection": "column",
                    "alignItems": "flex-start"
                  },
                  "size": "none",
                  "wrapperBody": false,
                  "id": "u:083ea68de770",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                },
                {
                  "type": "crud2",
                  "id": "u:3b2b45389384",
                  "mode": "table2",
                  "dsType": "api",
                  "syncLocation": true,
                  "primaryField": "id",
                  "loadType": "pagination",
                  "headerToolbar": [],
                  "footerToolbar": [
                    {
                      "type": "flex",
                      "direction": "row",
                      "justify": "flex-start",
                      "alignItems": "stretch",
                      "style": {
                        "position": "static",
                        "flexWrap": "nowrap"
                      },
                      "items": [
                        {
                          "type": "container",
                          "align": "right",
                          "body": [
                            {
                              "type": "pagination",
                              "behavior": "Pagination",
                              "layout": ["total", "perPage", "pager"],
                              "perPage": 10,
                              "perPageAvailable": [10, 20, 50, 100],
                              "align": "right",
                              "id": "u:a7c3246e5dc7",
                              "size": ""
                            }
                          ],
                          "wrapperBody": false,
                          "style": {
                            "flexGrow": 1,
                            "flex": "1 1 auto",
                            "position": "static",
                            "display": "flex",
                            "flexBasis": "auto",
                            "flexDirection": "row",
                            "flexWrap": "nowrap",
                            "alignItems": "stretch",
                            "justifyContent": "flex-end"
                          },
                          "id": "u:e98c292480cd"
                        }
                      ],
                      "id": "u:be43dbca68c3",
                      "isFixedHeight": false,
                      "isFixedWidth": false
                    }
                  ],
                  "columns": [
                    {
                      "type": "tpl",
                      "title": "设备名称",
                      "name": "name",
                      "id": "u:15be377c040d",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "总空间",
                      "name": "total_space",
                      "id": "u:0a918a44e7ab",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "可用空间",
                      "name": "free_space",
                      "id": "u:fd4f6cab56b5",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "空间使用率",
                      "name": "space_usage",
                      "id": "u:2f612690e295",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "inode节点使用率",
                      "name": "inodes_usage",
                      "id": "u:1420850ea8a4",
                      "placeholder": "-"
                    }
                  ],
                  "editorSetting": {
                    "mock": {
                      "enable": true,
                      "maxDisplayRows": 5
                    }
                  },
                  "api": {
                    "url": "/dc/cpt/graphql/v1/distinct/monitor_disk_partition/name",
                    "method": "post",
                    "requestAdaptor": "console.log(context)\r\n const hasuraQuery = {\r\n        isPageQuery: true,\r\n        searchConditionList: [],\r\n        page: api.data.page || 1,\r\n        sortList:[],\r\n        limit: api.data.perPage || 10,\r\n        columnList: []\r\n    };\r\n\r\n \r\n  hasuraQuery.sortList.push({\r\n                fieldName: \"name\",\r\n                sortExp: \"asc\"\r\n            });\r\n hasuraQuery.sortList.push({\r\n                fieldName: \"timestamp\",\r\n                sortExp: \"desc\"\r\n            });\r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"name\",\r\n        \"id\",\r\n        \"total_space\",\r\n        \"free_space\",\r\n        \"space_usage\",\r\n        \"inodes_usage\"\r\n\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;",
                    "adaptor": "function convertBytesToGigabytes(bytes) {\r\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\r\n    const gigabytes = bytes / (1024 * 1024 * 1024);\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2)) + `GiB`;\r\n}\r\n\r\nfunction convertPrecent(value) {\r\n    // 将小数转换为百分比并保留两位小数\r\n    if(!value||value=='NaN') return '0%';\r\n    return parseFloat((value * 100).toFixed(2)) + `%`;\r\n}\r\n    return {\r\n        status: 0,\r\n        success: true,\r\n        data: {\r\n            count: response.data.count,\r\n            rows: response.data.rows.map(item => {\r\n                return {\r\n                    ...item,\r\n                    \"total_space\": convertBytesToGigabytes(item.total_space),\r\n                    \"free_space\": convertBytesToGigabytes(item.free_space),\r\n                    \"space_usage\": convertPrecent(item.space_usage),\r\n                    \"inodes_usage\": convertPrecent(item.inodes_usage)\r\n                };\r\n            })\r\n        }\r\n    };\r\n\r\n    ",
                    "messages": {},
                    "interval": 10000,
                    "silentPolling": true
                  },
                  "interval": 10000,
                  "silentPolling": true,
                  "showHeader": true
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": 0
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:a878852297db"
            },
            {
              "type": "container",
              "body": [
                {
                  "type": "container",
                  "body": [
                    {
                      "type": "tpl",
                      "tpl": "磁盘信息",
                      "inline": true,
                      "wrapperComponent": "",
                      "id": "u:7d73bdb2f78a",
                      "themeCss": {
                        "baseControlClassName": {
                          "font:default": {
                            "fontWeight": "600",
                            "fontSize": "18px"
                          }
                        }
                      }
                    }
                  ],
                  "style": {
                    "position": "relative",
                    "display": "flex",
                    "inset": "auto",
                    "flexWrap": "nowrap",
                    "flexDirection": "column",
                    "alignItems": "flex-start"
                  },
                  "size": "none",
                  "wrapperBody": false,
                  "id": "u:2b818219c534",
                  "isFixedHeight": false,
                  "isFixedWidth": false
                },
                {
                  "type": "chart",
                  "config": {
                    "xAxis": {
                      "type": "category",
                      "data": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                      "boundaryGap": false,
                      "axisTick": {
                        "alignWithLabel": true
                      }
                    },
                    "yAxis": {
                      "type": "value"
                    },
                    "series": [
                      {
                        "data": [820, 932, 901, 934, 1290, 1330, 1320],
                        "type": "line"
                      }
                    ],
                    "backgroundColor": "transparent",
                    "tooltip": {
                      "trigger": "axis"
                    },
                    "grid": {
                      "right": "1%"
                    }
                  },
                  "replaceChartOption": true,
                  "id": "u:ac55ee4f9cba",
                  "dataFilter": "// 提取 X 轴数据\nconst xAxisData = data.rows.map(row => row.timestamp.replace(/T/g,' '));\n\n// 提取不同 mount_point 的数据作为 Y 轴数据\nconst mountPoints = [];\nconst seriesData = [];\n\ndata.rows.forEach(row => {\n  row.values.forEach(value => {\n    if (!mountPoints.includes(value.name)) {\n      mountPoints.push(value.name);\n      seriesData.push({\n        name: value.name,\n        type: 'line',\n        data: []\n      });\n    }\n    const seriesIndex = mountPoints.indexOf(value.name);\n    seriesData[seriesIndex].data.push(parseFloat((value.io_pst.toFixed(2))));\n  });\n});\n\nconfig.xAxis.data = xAxisData\nconfig.series = seriesData",
                  "api": {
                    "url": "/dc/cpt/graphql/v1/pageList/monitor_disk_info_recent",
                    "method": "post",
                    "requestAdaptor": "console.log(context)\r\n const hasuraQuery = {\r\n        isPageQuery: false,\r\n        searchConditionList: [],\r\n        page: api.data.page || 1,\r\n        sortList:[],\r\n        limit: api.data.perPage || 10,\r\n        columnList: []\r\n    };\r\n\r\n \r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"timestamp\",\r\n        \"values\"\r\n\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;",
                    "adaptor": "function convertBytesToGigabytes(bytes) {\r\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\r\n    const gigabytes = bytes / (1024 * 1024 * 1024);\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2)) + `GiB`;\r\n}\r\n\r\nfunction convertPrecent(value) {\r\n    // 将小数转换为百分比并保留两位小数\r\n    return parseFloat((value * 100).toFixed(2)) + `%`;\r\n}\r\nconsole.log(response ,\"retrun\")\r\n    return {\r\n        status: 0,\r\n        success: true,\r\n        data: {\r\n            count: response.data.count,\r\n            rows: response.data.rows.map(item => {\r\n                return {\r\n                    ...item,\r\n                    \"io_pst\": convertPrecent(item.total_space),\r\n                    \"timestamp\": convertTimestampToDateTime(item.timestamp)\r\n                };\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction convertTimestampToDateTime(timestamp) {\r\n  if (!timestamp) return \"-\";\r\n  const date = new Date(timestamp);\r\n  \r\n  // 年月日部分（使用本地时间）\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份从0开始，需+1\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  \r\n  // 时分秒部分（使用本地时间）\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  \r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n}\r\n    ",
                    "messages": {}
                  },
                  "interval": "15000ms"
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:6ba689b406a4"
            }
          ],
          "style": {
            "position": "relative",
            "rowGap": "10px",
            "columnGap": "10px",
            "flexWrap": "nowrap",
            "inset": "auto"
          },
          "id": "u:4b5d33aec105",
          "isFixedHeight": false,
          "isFixedWidth": false
        },
        {
          "type": "grid",
          "columns": [],
          "id": "u:8da6f965e32b"
        },
        {
          "type": "flex",
          "items": [
            {
              "type": "container",
              "body": [
                {
                  "type": "tpl",
                  "tpl": "Pod健康",
                  "inline": true,
                  "wrapperComponent": "h3",
                  "id": "u:518606fef5eb"
                },
                {
                  "id": "u:f7ef5d9b41b6",
                  "type": "crud2",
                  "mode": "table2",
                  "dsType": "api",
                  "syncLocation": true,
                  "primaryField": "id",
                  "loadType": "pagination",
                  "headerToolbar": [],
                  "footerToolbar": [
                    {
                      "type": "flex",
                      "direction": "row",
                      "justify": "flex-start",
                      "alignItems": "stretch",
                      "style": {
                        "position": "static",
                        "flexWrap": "nowrap"
                      },
                      "items": [
                        {
                          "type": "container",
                          "align": "right",
                          "body": [
                            {
                              "type": "pagination",
                              "behavior": "Pagination",
                              "layout": ["total", "perPage", "pager"],
                              "perPage": 10,
                              "perPageAvailable": [10, 20, 50, 100],
                              "align": "right",
                              "id": "u:6a4f7e2a31fc",
                              "size": ""
                            }
                          ],
                          "wrapperBody": false,
                          "style": {
                            "flexGrow": 1,
                            "flex": "1 1 auto",
                            "position": "static",
                            "display": "flex",
                            "flexBasis": "auto",
                            "flexDirection": "row",
                            "flexWrap": "nowrap",
                            "alignItems": "stretch",
                            "justifyContent": "flex-end"
                          },
                          "id": "u:36be40d8d9c5"
                        }
                      ],
                      "id": "u:c13057841526",
                      "isFixedHeight": false,
                      "isFixedWidth": false
                    }
                  ],
                  "columns": [
                    {
                      "type": "tpl",
                      "title": "组件名称",
                      "name": "name",
                      "id": "u:4b44dd552dbf",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "状态",
                      "name": "status",
                      "id": "u:d8c96ab4fdbf",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "真实IP",
                      "name": "pip",
                      "id": "u:e54fd229ae03",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "镜像版本",
                      "name": "image",
                      "id": "u:4e2fdc7c7e4c",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "CPU占用",
                      "name": "cpu",
                      "id": "u:337bf1df0468",
                      "placeholder": "-"
                    },
                    {
                      "type": "tpl",
                      "title": "内存占用",
                      "name": "memory",
                      "id": "u:c79d1942d28f",
                      "placeholder": "-"
                    }
                  ],
                  "editorSetting": {
                    "mock": {
                      "enable": true,
                      "maxDisplayRows": 5
                    }
                  },
                  "api": {
                    "url": "/dc/cpt/graphql/v1/distinct/monitor_pod_status/image",
                    "method": "post",
                    "requestAdaptor": "console.log(context)\r\n const hasuraQuery = {\r\n        isPageQuery: true,\r\n        searchConditionList: [],\r\n        page: api.data.page || 1,\r\n        sortList:[],\r\n        limit: api.data.perPage || 10,\r\n        columnList: []\r\n    };\r\n\r\n \r\n  hasuraQuery.sortList.push({\r\n                fieldName: \"image\",\r\n                sortExp: \"asc\"\r\n            });\r\n hasuraQuery.sortList.push({\r\n                fieldName: \"timestamp\",\r\n                sortExp: \"desc\"\r\n            });\r\n\r\n    // 处理返回字段\r\n    const columns = [\r\n        \"name\",\r\n        \"id\",\r\n        \"status\",\r\n        \"pip\",\r\n        \"image\",\r\n        \"cpu\",\r\n        \"memory\"\r\n\r\n    ];\r\n    hasuraQuery.columnList = columns;\r\n\r\n    // 假设前端没有传递排序条件，这里暂不处理\r\n\r\n    api.data = hasuraQuery;\r\n    return api;",
                    "adaptor": "function convertBytesToGigabytes(bytes) {\r\n    // 1 吉字节等于 1024 * 1024 * 1024 字节\r\n    const gigabytes = bytes / (1024 * 1024 * 1024);\r\n    // 保留两位小数\r\n    return parseFloat(gigabytes.toFixed(2)) + `Mi`;\r\n}\r\n\r\nfunction convertPrecent(value) {\r\n    // 将小数转换为百分比并保留两位小数\r\n    return parseFloat((value/1000).toFixed(2)) + `%`;\r\n}\r\n    return {\r\n        status: 0,\r\n        success: true,\r\n        data: {\r\n            count: response.data.count,\r\n            rows: response.data.rows.map(item => {\r\n                return {\r\n                    ...item,\r\n                    \"memory\": convertBytesToGigabytes(item.memory),\r\n                    \"cpu\": convertPrecent(item.cpu)\r\n                };\r\n            })\r\n        }\r\n    };\r\n\r\n    ",
                    "messages": {},
                    "interval": 10000,
                    "silentPolling": true
                  },
                  "silentPolling": true,
                  "interval": 10000
                }
              ],
              "size": "none",
              "style": {
                "position": "static",
                "display": "block",
                "flex": "1 1 auto",
                "flexGrow": 1,
                "flexBasis": "0px"
              },
              "wrapperBody": false,
              "isFixedHeight": false,
              "isFixedWidth": false,
              "id": "u:d8ee48190782"
            }
          ],
          "style": {
            "position": "relative",
            "rowGap": "10px",
            "columnGap": "10px"
          },
          "id": "u:183d710958db",
          "isFixedHeight": false,
          "isFixedWidth": false
        }
      ]
    }
  ]
}
